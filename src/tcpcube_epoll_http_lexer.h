#ifndef _TCPCUBE_EPOLL_HTTP_LEXER_H
#define _TCPCUBE_EPOLL_HTTP_LEXER_H

enum tcpcube_epoll_http_lexer_state
{
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_METHOD_BEGIN,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_METHOD,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_METHOD_END,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_URL_BEGIN,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_URL,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_URL_END,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_VERSION_BEGIN,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_VERSION,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_VERSION_END,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_HEADER_FIELD_BEGIN,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_HEADER_FIELD,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_HEADER_FIELD_END,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_HEADER_VALUE_BEGIN,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_HEADER_VALUE,
    TCPCUBE_EPOLL_HTTP_LEXER_HTTP_HEADER_VALUE_END,
};

struct tcpcube_epoll_http_lexer
{
    enum tcpcube_epoll_http_lexer_state state;
    char* buffer;
    ssize_t buffer_size;
    char* buffer_offset;
    char* token;
    char* token_offset;
};

int tcpcube_epoll_http_lexer_lex(struct tcpcube_epoll_http_lexer* lexer);

#endif
